@Scripts.Render("~/JS/NewsFormValidation.js")
@model Dalek_Mint.Models.News

@{
    ViewBag.Title = "AdminNewsForm";

    string buttoName = "";
    // If the form is for editing a pending event show it in the button name
    if (ViewBag.Type == "Approve")
    {
        buttoName = ViewBag.Type;
    }
    else
    {
        if (Session["Admin"] != null)
        {
            buttoName = "Create";
            // The contact text value if the admin is logged in.
        }
        else
        {
            buttoName = "Submit";
        }
    }
}


@if (ViewBag.Type == "Approve")
{
    <h2>Edit A Pending Event</h2>
}
else
{
    <h2>Publish News</h2>
}

@{
    string evnt = "";
    if (Model != null)
    {
        evnt = "Edit";
    }
    else if (Model == null)
    {
        evnt = "Create";
    }

    using (Html.BeginForm(evnt, "News", FormMethod.Post))
    {

        @Html.AntiForgeryToken()

        <hr />

        <div class="row">
            @{
                if (evnt == "Edit")
                {
                    <div>
                        @Html.EditorFor(model => model.NewsId, new { htmlAttributes = new { type = "hidden" } })
                    </div>
                }
            }
            <div class="col-sm-3">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", id = "newsTitle" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger", id = "newsTitleErr" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", id = "newsDesc", rows = "2", cols = "5" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger", id = "newsDescErr" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PostedBy, "Posted By", htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.DropDownListFor(model => model.PostedBy, (ViewData["ClubHosts"] as List<SelectListItem>), new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PostedBy, "", new { @class = "text-danger", id = "newsDescErr" })
                    </div>
                </div>

            </div>

            <div class="col-sm-9">
                <div class="form-group">
                    @Html.LabelFor(model => model.Article, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.Article, new { htmlAttributes = new { @class = "form-control", id = "newsArt", type = "textarea", rows = "9", cols = "100" } })
                        @Html.ValidationMessageFor(model => model.Article, "", new { @class = "text-danger", id = "newsArtErr" })
                    </div>
                </div>
                @*The contact input field.*@

            <div class="row">
                <div class="col-12 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ContactName, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.ContactName, new { htmlAttributes = new { @class = "form-control", id = "eventContactName" } })
                        @Html.ValidationMessageFor(model => model.ContactName, "", new { @class = "text-danger", id = "eContactErrorName" })
                    </div>
                    </div>
                <div class="col-12 col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control", id = "eventContact" } })
                        @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger", id = "eContactError" })
                    </div>
                </div>
                </div>


                <div class="form-group float-right">
                    <div>
                        <input type="submit" value="@buttoName" class="btn btn-primary" />
                    </div>
                </div>


            </div>
        </div>

    }
}



